parameters:

services:
    _defaults:
        autowire: false
        autoconfigure: false

    App\UI\Controller\:
        resource: '../src/UI/Controller'
        tags: ['controller.service_arguments']

    App\UI\Command\:
        resource: '../src/UI/Command'
        autowire: true
        autoconfigure: true
        bind:
            $connection: '@database_connection'
            $eventStore: '@broadway.event_store.dbal'
            $snapshotStore: '@App\Infrastructure\DBALSnapshotStore'
            $commandBus: '@broadway.command_handling.command_bus'
            $budgetRepository: '@App\Domain\Budget\BudgetRepository'
            $readmodelRepositoryBudgetBalance: '@app.readmodel.repository.budgetbalance'

    App\Infrastructure\:
        resource: '../src/Infrastructure'
        autowire: true
        autoconfigure: true

    App\Domain\Budget\Command\BudgetCommandHandler:
        arguments:
            $budgetRepository: '@App\Domain\Budget\BudgetRepository'
        tags:
            - { name: broadway.command_handler }


    # Budget
    App\Domain\Budget\BudgetRepository:
        arguments:
            $eventStore: '@broadway.event_store.dbal'
            $eventBus: '@broadway.event_handling.event_bus'
#            $eventStreamDecorators: ['@broadway.metadata_enriching_event_stream_decorator']
            $eventStreamDecorators: []

    App\ReadModel\BudgetBalanceProjector:
        tags:
            - { name: broadway.domain.event_listener }
        arguments:
            $readModelRepository: '@app.readmodel.repository.budgetbalance'

    app.readmodel.repository.budgetbalance:
        class: 'Broadway\ReadModel\ReadModel'
        factory: ['@broadway.read_model.repository_factory', create]
        arguments:
             $name: 'app.budgetbalance'
             $class: 'App\ReadModel\BudgetBalanceProjector'



    App\Infrastructure\DBALSnapshotStore:
        arguments:
            $connection: '@database_connection'
            $tableName: 'snapshots'
            $useBinary: false
